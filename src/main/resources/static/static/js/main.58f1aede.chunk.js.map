{"version":3,"sources":["components/shared/Nav.js","components/Welcome.js","actions/projectActions.js","actions/types.js","components/dashboard/DashBoardItems.js","components/dashboard/Dashboard.js","components/dashboard/dashboardOperations/CreateWallet.js","components/shared/NotFound.js","reducers/errorReducer.js","reducers/walletReducer.js","reducers/rootReducer.js","Store.js","components/dashboard/dashboardOperations/UpdateWallet.js","components/transactions/TransactionItems.js","components/transactions/Transaction.js","components/transactions/transactionOperations/AddTransaction.js","components/transactions/transactionOperations/EditTransactions.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","to","type","data-toggle","data-target","id","href","Component","Welcome","getWallet","dispath","a","axios","get","then","res","payload","data","DashBoardItems","deleteBtnClick","window","confirm","props","deleteWallet","wallet","this","name","accountNumber","description","currentBalance","To","onClick","connect","delete","Dashboard","state","nextProps","wallets","totalBal","i","length","setState","getWallets","walletComponent","map","key","aria-haspopup","aria-expanded","disabled","CreateWallet","changeHandler","event","fieldName","target","value","submitHandler","newWallet","priority","createWallet","history","preventDefault","errors","onSubmit","onChange","classnames","placeholder","post","push","catch","err","response","NotFound","initialState","transactions","transaction","combineReducers","action","filter","x","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","UpdateWallet","updateWallet","match","params","updateWaller","put","TransactionItems","deleteTransaction","wallet_id","Tid","transactionDate","amount","Transaction","getTransactions","updateWalletBal","income","expense","Bal","TransactionComponent","scope","AddTransaction","checkbox","checked","handleSubmit","alert","newTransaction","createTransaction","htmlFor","newTrans","EditTransactions","updateTransaction","getTransaction","min","App","path","component","exact","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"ySA4CeA,E,uKAvCP,OACI,yBAAKC,UAAU,uDACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAAlC,mBAGA,4BAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,eAChF,0BAAMJ,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2BK,GAAG,cACzC,wBAAIL,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,cAA9B,eAMR,wBAAID,UAAU,sBACV,wBAAIA,UAAU,YACV,uBAAGA,UAAU,YAAYM,KAAK,iBAA9B,YAIJ,wBAAIN,UAAU,YACV,uBAAGA,UAAU,WAAWM,KAAK,cAA7B,kB,GA5BdC,aC4BHC,E,uKA3BX,OAEA,yBAAKR,UAAU,WACf,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,qBAAd,4BACA,wBAAIA,UAAU,WAAd,oEAGA,6BACA,uBAAGM,KAAK,gBAAgBN,UAAU,+BAAlC,WAGA,uBAAGM,KAAK,aAAaN,UAAU,iCAA/B,kB,GAjBEO,a,kDC2ETE,EAAY,SAACJ,GAAD,8CAAQ,WAAMK,GAAN,SAAAC,EAAA,sEAExBC,IAAMC,IAAN,kBAAqBR,IACzBS,MAAK,SAACC,GAEJL,EAAQ,CAACR,KC3ES,YD2EMc,QAAQD,EAAIE,UALV,2CAAR,uD,QEzElBC,E,4MAEHC,eAAgB,WAGTC,OAAOC,QAAQ,iDAEd,EAAKC,MAAMC,aAAa,EAAKD,MAAME,OAAOnB,K,uDAIxC,IAAD,OAECmB,EAASC,KAAKH,MAAME,OAC1B,OACI,yBAAKxB,UAAU,aACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2BACX,4BAAKwB,EAAOE,MACZ,8CAAoBF,EAAOG,eAC3B,2BAAIH,EAAOI,cAEf,yBAAK5B,UAAU,uCACX,uCACA,mCAASwB,EAAOK,iBAEpB,yBAAK7B,UAAU,8BACX,wBAAIA,UAAU,cACV,kBAAC,IAAD,CAAMC,GAAE,wBAAmBuB,EAAOnB,KAC9B,wBAAIL,UAAU,sCACV,uBAAGA,UAAU,6BAAb,yBAGR,kBAAC,IAAD,CAAMC,GAAE,wBAAmBuB,EAAOnB,KAC9B,wBAAIL,UAAU,oCACV,uBAAGA,UAAU,mBAAb,0BAGR,kBAAC,IAAD,CAAM8B,GAAG,aAAaC,QAAS,kBAAI,EAAKZ,mBACpC,wBAAInB,UAAU,sCACV,uBAAGA,UAAU,2BAAb,8B,GAzCVO,aAuDfyB,cAAQ,KAAK,CAACT,aF8BD,SAAClB,GAAD,8CAAQ,WAAMK,GAAN,SAAAC,EAAA,sEAE3BC,IAAMqB,OAAQ,WAAW5B,GAC7BS,MAAK,SAACC,GAEJL,EAAQ,CAACR,KC1Fa,gBD0FMc,QAAQX,OALP,2CAAR,wDE9Bb2B,CAA6Bd,GCrD/BgB,EAAb,kDAII,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAEDa,MAAQ,CACVN,eAAgB,GAJF,EAJvB,sEAY0BO,GAE1B,GAAGA,EAAUC,QACb,CAGI,IAFA,IAAIC,EAAU,EAELC,EAAI,EAAGA,EAAIH,EAAUC,QAAQG,OAAQD,IAC1CD,GAAsBF,EAAUC,QAAQE,GAAGV,eAI/CJ,KAAKgB,SAAS,CAACZ,eAAeS,OAvBlC,0CA6BQb,KAAKH,MAAMoB,eA7BnB,+BAkCQ,IACMC,EADUlB,KAAKH,MAAMe,QACKO,KAAI,SAAApB,GAAM,OAAG,kBAAC,EAAD,CAAgBqB,IAAKrB,EAAOnB,GAAImB,OAAQA,OAGrF,OACI,yBAAKxB,UAAU,YACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,4BAAd,cACA,6BACA,yBAAKA,UAAU,aACX,4BAAQE,KAAK,SAASF,UAAU,sCAAsCG,cAAY,WAAW2C,gBAAc,OAAOC,gBAAc,SAAhI,cAGA,yBAAK/C,UAAU,iBACX,kBAAC,IAAD,CAAMA,UAAU,gBAAgBC,GAAG,iBAAnC,UACA,4BAAQ+C,UAAQ,EAAChD,UAAU,iBAA3B,iBAGR,6BACA,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,qCACX,uDACA,mCAASyB,KAAKU,MAAMN,kBAG5B,6BAMRc,UAnEpB,GAA+BpC,aA4FhByB,eALS,SAACG,GAAD,MAAY,CAEhCE,QAAQF,EAAMX,OAAOa,WAGc,CAACK,WHlCd,yDAAM,WAAMhC,GAAN,SAAAC,EAAA,sEAExBC,IAAMC,IAAI,WACdC,MAAK,SAACC,GAEJL,EAAQ,CAACR,KCnEW,aDmEKc,QAAQD,EAAIE,UALX,2CAAN,wDGkCXe,CAAsCE,G,yBC9F/Ce,E,kDAEF,WAAY3B,GAAQ,IAAD,8BACf,cAAMA,IAoBV4B,cAAgB,SAACC,EAAOC,GACpB,EAAKX,SAAL,eACKW,EAAYD,EAAME,OAAOC,SAvBf,EA2BnBC,cAAgB,SAACJ,GACb,IAAMK,EAAY,CAEd9B,KAAM,EAAKS,MAAMT,KACjBC,cAAe,EAAKQ,MAAMR,cAC1BC,YAAa,EAAKO,MAAMP,YACxB6B,SAAU,EAAKtB,MAAMsB,UAE1B,EAAKnC,MAAMoC,aAAaF,EAAU,EAAKlC,MAAMqC,SAC5CR,EAAMS,kBAjCN,EAAKzB,MAAQ,CACTT,KAAM,GACNC,cAAe,GACfC,YAAa,GACb6B,SAAU,GACVI,OAAO,IARI,E,sEAcOzB,GAEnBA,EAAUyB,QAErBpC,KAAKgB,SAAS,CAACoB,OAAOzB,EAAUyB,W,+BAoBlB,IAAD,OACL,OACI,yBAAK7D,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,oCAAd,iBACA,6BACA,0BAAM8D,SAAU,SAACX,GAAD,OAAS,EAAKI,cAAcJ,KACxC,yBAAKnD,UAAU,cACX,2BAAOE,KAAK,OAAO6D,SAAU,SAACZ,GAAD,OAAW,EAAKD,cAAcC,EAAO,SAASnD,UAAWgE,IAAW,+BAA+B,CAAC,aAAavC,KAAKU,MAAM0B,OAAOnC,OAAQuC,YAAY,iBACpL,uBAAGjE,UAAU,eAAeyB,KAAKU,MAAM0B,OAAOnC,OAElD,yBAAK1B,UAAU,cACX,2BAAOE,KAAK,OAAO6D,SAAU,SAACZ,GAAD,OAAW,EAAKD,cAAcC,EAAO,kBAAkBnD,UAAWgE,IAAW,+BAA+B,CAAC,aAAavC,KAAKU,MAAM0B,OAAOlC,gBAAiBsC,YAAY,eACtM,uBAAGjE,UAAU,eAAeyB,KAAKU,MAAM0B,OAAOlC,gBAGlD,yBAAK3B,UAAU,cACX,8BAAU+D,SAAU,SAACZ,GAAD,OAAW,EAAKD,cAAcC,EAAO,gBAAgBnD,UAAYgE,IAAW,+BAA+B,CAAC,aAAavC,KAAKU,MAAM0B,OAAOjC,cAAeqC,YAAY,gBAC1L,uBAAGjE,UAAU,eAAeyB,KAAKU,MAAM0B,OAAOjC,cAGlD,yBAAK5B,UAAU,cACX,4BAAQA,UAAU,+BAA+B+D,SAAU,SAACZ,GAAD,OAAW,EAAKD,cAAcC,EAAO,aAAazB,KAAK,YAC9G,4BAAQ4B,MAAO,GAAf,oBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAGR,2BAAOpD,KAAK,SAASF,UAAU,iCAAiCsD,MAAM,2B,GAvE3E/C,aAuFZyB,eANS,SAACG,GAAD,MAAY,CAEhC0B,OAAO1B,EAAM0B,UAIsB,CAACH,aJvFZ,SAACF,EAAYG,GAAb,8CAAyB,WAAMjD,GAAN,SAAAC,EAAA,sEAE5CC,IAAMsD,KAAK,UAAWV,GAC1B1C,MAAK,SAACC,GAGL4C,EAAQQ,KAAK,iBAGZC,OAAM,SAACC,GAEV3D,EAAQ,CAACR,KCfa,aDeGc,QAAQqD,EAAIC,SAASrD,UAXG,2CAAzB,wDIuFbe,CAAwCiB,GC/DxCsB,E,uKAxBP,OACI,yBAAKvE,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,qCAEA,6CAEA,yBAAKA,UAAU,iBAAf,0DAGA,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,0BAAyB,0BAAMA,UAAU,6BAAhE,0B,GAfTO,a,iBCAjBiE,EAAe,G,QCCfA,EAAe,CAEjBnC,QAAS,GACToC,aAAc,GACdjD,OAAQ,GACRkD,YAAa,ICJFC,cAAiB,CAE5Bd,OFCW,WAAyC,IAA/B1B,EAA8B,uDAAtBqC,EAAcI,EAAQ,uCACnD,OAAQA,EAAO1E,MACX,ILTkB,aKUd,OAAO0E,EAAO5D,QAClB,QACI,OAAOmB,IELfX,ODKW,WAAyC,IAA/BW,EAA8B,uDAAtBqC,EAAcI,EAAQ,uCACnD,OAAQA,EAAO1E,MAGX,INRwB,mBMSpB,kCAAUiC,GAAV,IAAiBsC,aAAcG,EAAO5D,UACtC,INTmB,kBMUf,kCAAUmB,GAAV,IAAiBuC,YAAaE,EAAO5D,UAC7C,INbiB,YMcb,OAAO,2BAAKmB,GAAZ,IAAmBX,OAAQoD,EAAO5D,UACtC,INpBkB,aMqBd,OAAO,2BAAKmB,GAAZ,IAAmBE,QAASuC,EAAO5D,UACvC,INpBqB,gBMqBjB,OAAO,2BAAKmB,GAAZ,IAAmBE,QAASF,EAAME,QAAQwC,QAAO,SAAAC,GAAC,OAAIA,EAAEzE,KAAOuE,EAAO5D,aAExE,INjBwB,qBMkBtB,OAAO,2BAAKmB,GAAZ,IAAmBsC,aAActC,EAAMsC,aAAaI,QAAO,SAAAC,GAAC,OAAIA,EAAEzE,KAAOuE,EAAO5D,aACpF,QACI,OAAOmB,MEzBb4C,EAAa,CAACC,KAiBLC,EALHC,YAAYC,EAbH,GAebC,YAAQC,IAAe,WAAf,EAAmBN,KCd7BO,E,kDAEF,WAAYhE,GAAQ,IAAD,8BACf,cAAMA,IAoCV4B,cAAgB,SAACC,EAAOC,GACpB,EAAKX,SAAL,eACKW,EAAYD,EAAME,OAAOC,SAvCf,EA+CnBC,cAAgB,SAACJ,GACb,IAAMoC,EAAe,CACjBlF,GAAI,EAAK8B,MAAM9B,GACfqB,KAAM,EAAKS,MAAMT,KACjBC,cAAe,EAAKQ,MAAMR,cAC1BC,YAAa,EAAKO,MAAMP,YACxBC,eAAe,EAAKM,MAAMN,eAC1B4B,SAAU,EAAKtB,MAAMsB,UAEjC,EAAKnC,MAAMiE,aAAa,EAAKpD,MAAM9B,GAAGkF,EAAa,EAAKjE,MAAMqC,SACtDR,EAAMS,kBAtDN,EAAKzB,MAAQ,CACT9B,GAAI,GACJqB,KAAM,GACNC,cAAe,GACfC,YAAa,GACb6B,SAAU,GACV5B,eAAe,GACfgC,OAAQ,IAVG,E,sEAgBOzB,GAClBA,EAAUyB,QACVpC,KAAKgB,SAAS,CAAEoB,OAAQzB,EAAUyB,SAGlCzB,EAAUZ,QACVC,KAAKgB,SAAS,CAEVpC,GAAI+B,EAAUZ,OAAOnB,GACrBqB,KAAMU,EAAUZ,OAAOE,KACvBC,cAAeS,EAAUZ,OAAOG,cAChCC,YAAaQ,EAAUZ,OAAOI,YAC9BC,eAAeO,EAAUZ,OAAOK,eAChC4B,SAAUrB,EAAUZ,OAAOiC,a,0CAgBnChC,KAAKH,MAAMb,UAAUgB,KAAKH,MAAMkE,MAAMC,OAAOpF,M,+BAcvC,IAAD,OACL,OACI,yBAAKL,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,yBAAd,iBACA,6BACA,0BAAM8D,SAAU,SAACX,GAAD,OAAW,EAAKI,cAAcJ,KAC1C,yBAAKnD,UAAU,cACX,2BAAOE,KAAK,OAAOoD,MAAO7B,KAAKU,MAAMT,KAAMqC,SAAU,SAACZ,GAAD,OAAW,EAAKD,cAAcC,EAAO,SAASnD,UAAWgE,IAAW,+BAAgC,CAAE,aAAcvC,KAAKU,MAAM0B,OAAOnC,OAASuC,YAAY,iBAChN,uBAAGjE,UAAU,eAAeyB,KAAKU,MAAM0B,OAAOnC,OAElD,yBAAK1B,UAAU,cACX,2BAAOE,KAAK,OAAOoD,MAAO7B,KAAKU,MAAMR,cAAeoC,SAAU,SAACZ,GAAD,OAAW,EAAKD,cAAcC,EAAO,kBAAkBnD,UAAWgE,IAAW,+BAAgC,CAAE,aAAcvC,KAAKU,MAAM0B,OAAOlC,gBAAkBsC,YAAY,eAC3O,uBAAGjE,UAAU,eAAeyB,KAAKU,MAAM0B,OAAOlC,gBAGlD,yBAAK3B,UAAU,cACX,8BAAUsD,MAAO7B,KAAKU,MAAMP,YAAamC,SAAU,SAACZ,GAAD,OAAW,EAAKD,cAAcC,EAAO,gBAAgBnD,UAAWgE,IAAW,+BAAgC,CAAE,aAAcvC,KAAKU,MAAM0B,OAAOjC,cAAgBqC,YAAY,gBAC5N,uBAAGjE,UAAU,eAAeyB,KAAKU,MAAM0B,OAAOjC,cAGlD,yBAAK5B,UAAU,cACX,4BAAQsD,MAAO7B,KAAKU,MAAMsB,SAAUzD,UAAU,+BAA+B+D,SAAU,SAACZ,GAAD,OAAW,EAAKD,cAAcC,EAAO,aAAazB,KAAK,YAC1I,4BAAQ4B,MAAO,GAAf,oBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAGR,2BAAOpD,KAAK,SAASF,UAAU,iCAAiCsD,MAAM,oB,GA5F3E/C,aA4GZyB,eANS,SAACG,GAAD,MAAY,CAEhC0B,OAAQ1B,EAAM0B,OACdrC,OAAQW,EAAMX,OAAOA,UAGe,CAAEf,YAAU8E,aVxFxB,SAAClF,EAAGqF,EAAe/B,GAAnB,8CAA+B,WAAMjD,GAAN,SAAAC,EAAA,sEAElDC,IAAM+E,IAAN,kBAAqBtF,GAAMqF,GAC/B5E,MAAK,SAACC,GAGL4C,EAAQQ,KAAK,iBAGZC,OAAM,SAACC,GAEV3D,EAAQ,CAACR,KCpCa,aDoCGc,QAAQqD,EAAIC,SAASrD,UAXS,2CAA/B,wDUwFbe,CAAqDsD,GC3G7DM,E,4MAKLzE,eAAgB,WAGPC,OAAOC,QAAQ,iDAEd,EAAKC,MAAMuE,kBAAkB,EAAKvE,MAAMwE,UAAU,EAAKxE,MAAMoD,YAAYrE,K,uDAIzE,IAAD,OAGJA,EAAKoB,KAAKH,MAAMwE,UAChBC,EAAKtE,KAAKH,MAAMoD,YAAYrE,GACzBqE,EAAcjD,KAAKH,MAAMoD,YAC/B,OAEI,wBAAI1E,UAAU,oBACd,4BAAK0E,EAAYsB,iBACjB,4BAAKtB,EAAY9C,aACjB,wBAAI5B,UAAU,cAAc0E,EAAYuB,QACxC,4BACI,kBAAC,IAAD,CAAMjG,UAAU,YAAYC,GAAE,qBAAgBI,EAAhB,YAAsB0F,IAAO,uBAAG/F,UAAU,uBACxE,kBAAC,IAAD,CAAMA,UAAU,cAAcC,GAAE,wBAAmBI,GAAM0B,QAAS,kBAAI,EAAKZ,mBAAkB,uBAAGnB,UAAU,8B,GA5BtFO,aAqCjByB,cAAQ,KAAK,CAAC6D,kBX4GI,SAACC,EAAUzF,GAAX,8CAAkB,WAAMK,GAAN,SAAAC,EAAA,sEAG1CC,IAAMqB,OAAN,uBAA8B6D,EAA9B,YAA2CzF,IAC/CS,MAAK,SAACC,GAGJL,EAAQ,CAACR,KCpJkB,qBDoJMc,QAAQX,OAPG,2CAAlB,wDW5GlB2B,CAAkC4D,GCtC3CM,E,kDAGF,WAAY5E,GAAQ,IAAD,8BACf,cAAMA,IAEDa,MAAQ,CACT9B,GAAI,GACJqB,KAAM,GACNC,cAAe,GACfC,YAAa,GACb6B,SAAU,GACV5B,eAAgB,GAChBgC,OAAQ,IAVG,E,gEAefpC,KAAKH,MAAM6E,gBAAgB1E,KAAKH,MAAMkE,MAAMC,OAAOpF,IACnDoB,KAAKH,MAAMb,UAAUgB,KAAKH,MAAMkE,MAAMC,OAAOpF,M,2CAG5B+B,GAGjB,IAAMmD,EAAe,CACjBlF,GAAIoB,KAAKU,MAAM9B,GACfqB,KAAMD,KAAKU,MAAMT,KACjBC,cAAeF,KAAKU,MAAMR,cAC1BC,YAAaH,KAAKU,MAAMP,YACxBC,eAAgBJ,KAAKU,MAAMN,eAC3B4B,SAAUhC,KAAKU,MAAMsB,UAIzBhC,KAAKH,MAAM8E,gBAAgB3E,KAAKU,MAAM9B,GAAIkF,EAAc9D,KAAKH,MAAMqC,W,gDAI7CvB,GAItB,GAAIA,EAAUqC,aAAc,CAGxB,IAFA,IAAI4B,EAAS,EACTC,EAAU,EACL/D,EAAI,EAAGA,EAAIH,EAAUqC,aAAajC,OAAQD,IAER,IAAnCH,EAAUqC,aAAalC,GAAGrC,KAC1BoG,GAAoBlE,EAAUqC,aAAalC,GAAG0D,OAI9CI,GAAkBjE,EAAUqC,aAAalC,GAAG0D,OAMpD,IAAIM,EACJA,EAAMF,EAASC,EAEf7E,KAAKgB,SAAS,CAAEZ,eAAgB0E,IAE5BnE,EAAUZ,QAGVC,KAAKgB,SAAS,CACVpC,GAAI+B,EAAUZ,OAAOnB,GACrBqB,KAAMU,EAAUZ,OAAOE,KACvBC,cAAeS,EAAUZ,OAAOG,cAChCC,YAAaQ,EAAUZ,OAAOI,YAE9B6B,SAAUrB,EAAUZ,OAAOiC,c,+BAiBvC,IAAIpD,EAAKoB,KAAKH,MAAMkE,MAAMC,OAAOpF,GAI3BmG,EAFe/E,KAAKH,MAAMmD,aAEU7B,KAAI,SAAA8B,GAAW,OACpD,kBAAC,EAAD,CAAkB7B,IAAK6B,EAAYrE,GAAIqE,YAAaA,EAAaoB,UAAWzF,OACjF,OACI,yBAAKL,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,0CAAhC,QAGA,kBAAC,IAAD,CAAMC,GAAE,oBAAeI,GAAML,UAAU,4BACnC,uBAAGA,UAAU,uBAAb,4BAEJ,6BACA,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,qCACX,wBAAIA,UAAU,cAAcyB,KAAKU,MAAMT,KAAvC,oBACA,wBAAI1B,UAAU,cAAd,OAAgCyB,KAAKU,MAAMN,kBAGnD,6BAEA,2BAAO7B,UAAU,SACb,2BAAOA,UAAU,cACb,4BACI,wBAAIyG,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,eACA,wBAAIA,MAAM,OAAV,UACA,+BAKR,+BAGKD,S,GA/HCjG,aAoJXyB,eAPS,SAACG,GAAD,MAAY,CAEhCX,OAAQW,EAAMX,OAAOA,OACrBiD,aAActC,EAAMX,OAAOiD,gBAIS,CAAE0B,gBZ5BZ,SAACL,GAAD,8CAAe,WAAMpF,GAAN,SAAAC,EAAA,sEAEpCC,IAAMC,IAAN,uBAA0BiF,IAC9BhF,MAAK,SAACC,GAEJL,EAAQ,CAACR,KC1HgB,mBD0HMc,QAAQD,EAAIE,UALL,2CAAf,uDY4B6BR,YAAW2F,gBZ5GvC,SAAC/F,EAAGqF,EAAe/B,GAAnB,8CAA+B,WAAMjD,GAAN,SAAAC,EAAA,sEAErDC,IAAM+E,IAAN,kBAAqBtF,GAAMqF,GAC/B5E,MAAK,SAACC,OAMJqD,OAAM,SAACC,GAEV3D,EAAQ,CAACR,KCxDa,aDwDGc,QAAQqD,EAAIC,SAASrD,UAXY,2CAA/B,wDY4GhBe,CAA0EkE,GCrJnFQ,E,kDAEF,WAAYpF,GAAQ,IAAD,8BACf,cAAMA,IA0CV4B,cAAgB,SAACC,EAAOC,EAAWuD,GAC/B,EAAKlE,SAAL,eACKW,EAAYuD,EAAWxD,EAAME,OAAOuD,QAAUzD,EAAME,OAAOC,SA7CjD,EAgDnBuD,aAAe,SAAC1D,GAGZ,GAAwB,MAApB,EAAKhB,MAAMjC,KAEX,GAAI,EAAKiC,MAAMN,eAAiB,EAAKM,MAAM8D,OACvCa,MAAM,0EACJ,CAGF,IAAIC,EAAiB,CACjBd,OAAQ,EAAK9D,MAAM8D,OACnBrE,YAAa,EAAKO,MAAMP,YACxB1B,KAAM,EAAKiC,MAAMjC,MAGrB,EAAKoB,MAAM0F,kBAAkBD,EAAgB,EAAKzF,MAAMqC,QAAS,EAAKrC,MAAMkE,MAAMC,OAAOpF,IAGzF8C,EAAMS,qBAMP,CACH,IAAImD,EAAiB,CACjBd,OAAQ,EAAK9D,MAAM8D,OACnBrE,YAAa,EAAKO,MAAMP,YACxB1B,KAAM,EAAKiC,MAAMjC,MAGrB,EAAKoB,MAAM0F,kBAAkBD,EAAgB,EAAKzF,MAAMqC,QAAS,EAAKrC,MAAMkE,MAAMC,OAAOpF,IAGzF8C,EAAMS,mBAhFV,EAAKzB,MAAQ,CACTN,eAAgB,GAChBoE,OAAQ,GACRrE,YAAa,GACb1B,KAAM,KAPK,E,sEAaOkC,GAIlBA,EAAUZ,QACVC,KAAKgB,SAAS,CAEVZ,eAAgBO,EAAUZ,OAAOK,mB,0CAqBzCJ,KAAKH,MAAMb,UAAUgB,KAAKH,MAAMkE,MAAMC,OAAOpF,M,+BAgDnC,IAAD,OACDA,EAAKoB,KAAKH,MAAMkE,MAAMC,OAAOpF,GAD5B,EAE2BoB,KAAKU,MAA7B8D,EAFH,EAEGA,OAAQrE,EAFX,EAEWA,YAChB,OAEI,yBAAK5B,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CAAMC,GAAE,wBAAmBI,GAAML,UAAU,iBAA3C,kBAGA,wBAAIA,UAAU,4BAAd,0BACA,uBAAGA,UAAU,uBAAb,eACA,0BAAM8D,SAAUrC,KAAKoF,cACjB,yBAAK7G,UAAU,cACX,2BAAOE,KAAK,SAAUoD,MAAO2C,EAAQlC,SAAU,SAAAZ,GAAK,OAAI,EAAKD,cAAcC,EAAO,UAAU,IAAQnD,UAAU,+BAA+BiE,YAAY,YAE7J,yBAAKjE,UAAU,cACX,8BAAUA,UAAU,+BAA+BsD,MAAO1B,EAAamC,SAAU,SAAAZ,GAAK,OAAI,EAAKD,cAAcC,EAAO,eAAe,IAAQc,YAAY,iBAE3J,yBAAKjE,UAAU,cACX,2BAAOiH,QAAQ,+BAAf,uBACA,yBAAKjH,UAAU,gCACX,2BAAO4G,SAAO,EAAC5G,UAAU,mBAAmBE,KAAK,QAAQG,GAAG,SAAS0D,SAAU,SAAAZ,GAAK,OAAI,EAAKD,cAAcC,EAAO,QAAQ,IAAQzB,KAAK,OAAO4B,MAAM,MACpJ,2BAAOtD,UAAU,mBAAmBiH,QAAQ,UAA5C,WAEJ,yBAAKjH,UAAU,gCACX,2BAAOA,UAAU,mBAAmBE,KAAK,QAAQG,GAAG,UAAU0D,SAAU,SAAAZ,GAAK,OAAI,EAAKD,cAAcC,EAAO,QAAQ,IAAQzB,KAAK,OAAO4B,MAAM,MAC7I,2BAAOtD,UAAU,mBAAmBiH,QAAQ,WAA5C,aAIR,2BAAO/G,KAAK,SAASF,UAAU,4C,GA5HtCO,aA4IVyB,eAPS,SAACG,GAAD,MAAY,CAEhCX,OAAQW,EAAMX,OAAOA,UAKe,CAAEwF,kBbtCd,SAACE,EAAWvD,EAAQmC,GAApB,8CAAkC,WAAMpF,GAAN,SAAAC,EAAA,sEAEzDC,IAAMsD,KAAN,uBAA2B4B,GAAaoB,GAC5CpG,MAAK,SAACC,GAGL4C,EAAQQ,KAAR,wBAA8B2B,OAG7B1B,OAAM,SAACC,GAEV3D,EAAQ,CAACR,KCrHa,aDqHGc,QAAQqD,EAAIC,SAASrD,UAXgB,2CAAlC,uDasCiCR,aAA9CuB,CAA4D0E,GC3IzES,E,kDACF,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IAyCV4B,cAAgB,SAACC,EAAOC,GACpB,EAAKX,SAAL,eACKW,EAAYD,EAAME,OAAOC,SA5Cf,EA+CnBuD,aAAe,SAAC1D,GAEZ,IAAIiE,EAAoB,CACpB/G,GAAG,EAAK8B,MAAM9B,GACd4F,OAAQ,EAAK9D,MAAM8D,OACnBrE,YAAa,EAAKO,MAAMP,YACxBoE,gBAAgB,EAAK7D,MAAM6D,gBAC3B9F,KAAM,EAAKiC,MAAMjC,MAGrB,EAAKoB,MAAM8F,kBAAkB,EAAKjF,MAAM9B,GAAG,EAAKiB,MAAMkE,MAAMC,OAAOpF,GAAG+G,EAAmB,EAAK9F,MAAMqC,SACpGR,EAAMS,kBAvDN,EAAKzB,MAAQ,CACT9B,GAAG,GACH4F,OAAQ,GACRrE,YAAa,GACb1B,KAAM,IACN8F,gBAAgB,GAChBtE,KAAK,IATM,E,sEAgBOU,GAElBA,EAAUsC,aAEVjD,KAAKgB,SAAS,CAEVpC,GAAI+B,EAAUsC,YAAYrE,GAC1B4F,OAAQ7D,EAAUsC,YAAYuB,OAC9BrE,YAAaQ,EAAUsC,YAAY9C,YACnC1B,KAAMkC,EAAUsC,YAAYxE,KAC5B8F,gBAAgB5D,EAAUsC,YAAYsB,kBAIvC5D,EAAUZ,QAETC,KAAKgB,SAAS,CAEVf,KAAKU,EAAUZ,OAAOE,S,0CA4BlCD,KAAKH,MAAM+F,eAAe5F,KAAKH,MAAMkE,MAAMC,OAAOpF,GAAIoB,KAAKH,MAAMkE,MAAMC,OAAOM,KAC9EtE,KAAKH,MAAMb,UAAUgB,KAAKH,MAAMkE,MAAMC,OAAOpF,M,+BAEvC,IAAD,OACDA,EAAKoB,KAAKH,MAAMkE,MAAMC,OAAOpF,GAD5B,EAEgCoB,KAAKU,MAAlC8D,EAFH,EAEGA,OAAQrE,EAFX,EAEWA,YAAY1B,EAFvB,EAEuBA,KAE5B,OAGI,yBAAKF,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CAAMC,GAAE,wBAAmBI,GAAML,UAAU,iBAA3C,kBAGA,wBAAIA,UAAU,oCAAd,sBACA,uBAAGA,UAAU,+BAA+ByB,KAAKU,MAAMT,KAAvD,YACA,0BAAMoC,SAAUrC,KAAKoF,cACjB,yBAAK7G,UAAU,cACX,2BAAOE,KAAK,SAASoH,IAAI,IAAIhE,MAAO2C,EAAQlC,SAAU,SAAAZ,GAAK,OAAI,EAAKD,cAAcC,EAAO,WAAWnD,UAAU,+BAA+BiE,YAAY,YAE7J,yBAAKjE,UAAU,cACX,8BAAUA,UAAU,+BAA+BsD,MAAO1B,EAAamC,SAAU,SAAAZ,GAAK,OAAI,EAAKD,cAAcC,EAAO,gBAAgBc,YAAY,iBAEpJ,yBAAKjE,UAAU,oBACX,2BAAOiH,QAAQ,gCAAf,uBACA,yBAAKjH,UAAU,gCACX,2BAAQA,UAAU,mBAAmBE,KAAK,QAAQG,GAAG,SAASuG,QAAkB,IAAT1G,EAAY6D,SAAU,SAAAZ,GAAK,OAAI,EAAKD,cAAcC,EAAO,SAASzB,KAAK,OAAO4B,MAAM,MAC3J,2BAAOtD,UAAU,mBAAmBiH,QAAQ,UAA5C,WAEJ,yBAAKjH,UAAU,gCACX,2BAAOA,UAAU,mBAAmBE,KAAK,QAAQG,GAAG,UAAUuG,QAAkB,IAAT1G,EAAY6D,SAAU,SAAAZ,GAAK,OAAI,EAAKD,cAAcC,EAAO,SAASzB,KAAK,OAAO4B,MAAM,MAC3J,2BAAOtD,UAAU,mBAAmBiH,QAAQ,WAA5C,aAIR,2BAAO/G,KAAK,SAASF,UAAU,4C,GArGhCO,aAqHhByB,eANS,SAACG,GAAD,MAAY,CAChC0B,OAAQ1B,EAAM0B,OACda,YAAavC,EAAMX,OAAOkD,YAC1BlD,OAAQW,EAAMX,OAAOA,UAGe,CAAC4F,kBd6CP,SAAC/G,EAAGyF,EAAUsB,EAAoBzD,GAAlC,8CAA8C,WAAMjD,GAAN,SAAAC,EAAA,sEAEvEC,IAAM+E,IAAN,4CAA+CG,EAA/C,YAA4DzF,GAAM+G,GACtEtG,MAAK,SAACC,GAGL4C,EAAQQ,KAAR,wBAA8B2B,OAG7B1B,OAAM,SAACC,GAEV3D,EAAQ,CAACR,KClLa,aDkLGc,QAAQqD,EAAIC,SAASrD,UAX8B,2CAA9C,uDc7C0BoG,edgB9B,SAACvB,EAAUzF,GAAX,8CAAkB,WAAMK,GAAN,SAAAC,EAAA,sEAEvCC,IAAMC,IAAN,uBAA0BiF,EAA1B,YAAuCzF,IAC3CS,MAAK,SAACC,GAEJL,EAAQ,CAACR,KCtIe,kBDsIMc,QAAQD,EAAIE,UALD,2CAAlB,uDchB8CR,aAA7DuB,CAAyEmF,G,OClFzEI,MAxBf,WACE,OACE,kBAAC,IAAD,CAAUtC,MAAOA,GACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuC,KAAK,IAAIC,UAAW1H,IAE3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyH,KAAK,IAAIE,OAAK,EAACD,UAAWjH,IACjC,kBAAC,IAAD,CAAOgH,KAAK,aAAaE,OAAK,EAACD,UAAWvF,IAC1C,kBAAC,IAAD,CAAOsF,KAAK,gBAAgBE,OAAK,EAACD,UAAYxE,IAC9C,kBAAC,IAAD,CAAOuE,KAAK,oBAAoBE,OAAK,EAACD,UAAYnC,IAClD,kBAAC,IAAD,CAAOkC,KAAK,oBAAoBE,OAAK,EAACD,UAAWvB,IACjD,kBAAC,IAAD,CAAOsB,KAAK,gBAAgBE,OAAK,EAACD,UAAWf,IAC7C,kBAAC,IAAD,CAAOc,KAAK,sBAAsBE,OAAK,EAACD,UAAWN,IACnD,kBAAC,IAAD,CAAOK,KAAK,IAAIC,UAAWlD,QClBfoD,QACW,cAA7BvG,OAAOwG,SAASC,UAEe,UAA7BzG,OAAOwG,SAASC,UAEhBzG,OAAOwG,SAASC,SAASrC,MACvB,2DCZNsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvH,MAAK,SAAAwH,GACJA,EAAaC,gBAEdnE,OAAM,SAAAoE,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.58f1aede.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom' \r\n\r\nclass Nav extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Expense Manager\r\n            </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                                    Dashboard\r\n                        </Link>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link \" href=\"register.html\">\r\n                                    Sign Up\r\n                        </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"login.html\">\r\n                                    Login\r\n                        </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav\r\n","import React, { Component } from 'react'\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    return (\r\n      \r\n    <div className=\"landing\">\r\n    <div className=\"light-overlay landing-inner text-dark\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 text-center\">\r\n                    <h1 className=\"display-3 mb-4 h1\" >Personal Expense Manager</h1>\r\n                    <h3 className=\"lead h1\">\r\n                        Create your account to manage your daily expense and hisab kitab\r\n                    </h3>\r\n                    <hr />\r\n                    <a href=\"register.html\" className=\"btn btn-lg btn-primary mr-2\">\r\n                        Sign Up\r\n                    </a>\r\n                    <a href=\"login.html\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                        Login\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Welcome\r\n","import axios from 'axios'\r\nimport {GET_ERRORS, GET_WALLET,GET_TRANSACTION, DELETE_WALLET,GETWALLET,GET_TRANSACTIONS,DELETE_TRANSACTION} from './types'\r\n\r\n\r\nexport const createWallet = (newWallet , history) => async dispath => {\r\n\r\n   await axios.post('/wallet', newWallet)\r\n    .then((res) =>{\r\n\r\n     \r\n      history.push('/dashboard')\r\n       \r\n\r\n    }).catch((err) => {\r\n    \r\n    dispath({type:GET_ERRORS,payload:err.response.data})\r\n   \r\n    });\r\n\r\n//sync => wait\r\n//async = not wait\r\n}\r\n\r\n\r\n\r\nexport const updateWallet = (id,updateWaller , history) => async dispath => {\r\n  \r\n   await axios.put(`/wallet/${id}`, updateWaller)\r\n    .then((res) =>{\r\n\r\n      \r\n      history.push('/dashboard')\r\n       \r\n\r\n    }).catch((err) => {\r\n      \r\n    dispath({type:GET_ERRORS,payload:err.response.data})\r\n   \r\n    });\r\n\r\n//sync => wait\r\n//async = not wait\r\n}\r\n\r\n\r\nexport const updateWalletBal = (id,updateWaller , history) => async dispath => {\r\n  \r\n   await axios.put(`/wallet/${id}`, updateWaller)\r\n    .then((res) =>{\r\n\r\n      \r\n      \r\n       \r\n\r\n    }).catch((err) => {\r\n      \r\n    dispath({type:GET_ERRORS,payload:err.response.data})\r\n   \r\n    });\r\n\r\n//sync => wait\r\n//async = not wait\r\n}\r\n\r\nexport const getWallets = () => async dispath => {\r\n\r\n  await axios.get('/wallet')\r\n   .then((res) =>{\r\n\r\n      dispath({type:GET_WALLET,payload:res.data})\r\n   });\r\n\r\n//sync => wait\r\n//async = not wait\r\n\r\n}\r\n\r\nexport const getWallet = (id) => async dispath => {\r\n\r\n   await axios.get(`/wallet/${id}`)\r\n    .then((res) =>{\r\n \r\n       dispath({type:GETWALLET,payload:res.data})\r\n    });\r\n \r\n //sync => wait\r\n //async = not wait\r\n \r\n }\r\nexport const deleteWallet = (id) => async dispath => {\r\n\r\n   await axios.delete( '/wallet/'+id)\r\n    .then((res) =>{\r\n \r\n       dispath({type:DELETE_WALLET,payload:id})\r\n    });\r\n \r\n //sync => wait\r\n //async = not wait\r\n \r\n }\r\n\r\n\r\n ////////////////////////////// transactions\r\n\r\n \r\nexport const createTransaction= (newTrans , history,wallet_id) => async dispath => {\r\n  \r\n   await axios.post(`/transaction/${wallet_id}`, newTrans)\r\n    .then((res) =>{\r\n\r\n    \r\n      history.push(`/transactions/${wallet_id}`)\r\n       \r\n\r\n    }).catch((err) => {\r\n     \r\n    dispath({type:GET_ERRORS,payload:err.response.data})\r\n   \r\n    });\r\n\r\n//sync => wait\r\n//async = not wait\r\n}\r\n\r\nexport const getTransactions= (wallet_id) => async dispath => {\r\n\r\n   await axios.get(`/transaction/${wallet_id}`)\r\n    .then((res) =>{\r\n\r\n       dispath({type:GET_TRANSACTIONS,payload:res.data})\r\n    });\r\n \r\n //sync => wait\r\n //async = not wait\r\n \r\n }\r\n\r\n export const getTransaction= (wallet_id,id) => async dispath => {\r\n   \r\n   await axios.get(`/transaction/${wallet_id}/${id}`)\r\n    .then((res) =>{\r\n\r\n       dispath({type:GET_TRANSACTION,payload:res.data})\r\n    });\r\n \r\n //sync => wait\r\n //async = not wait\r\n \r\n }\r\n \r\nexport const deleteTransaction = (wallet_id,id) => async dispath => {\r\n\r\n\r\n   await axios.delete( `/transaction/${wallet_id}/${id}`)\r\n    .then((res) =>{\r\n \r\n\r\n       dispath({type:DELETE_TRANSACTION,payload:id})\r\n    });\r\n \r\n //sync => wait\r\n //async = not wait\r\n \r\n }\r\n\r\n\r\n export const updateTransaction = (id,wallet_id,updateTransaction , history) => async dispath => {\r\n\r\n   await axios.put(`http://localhost:8080/transaction/${wallet_id}/${id}`, updateTransaction)\r\n    .then((res) =>{\r\n\r\n     \r\n      history.push(`/transactions/${wallet_id}`)\r\n       \r\n\r\n    }).catch((err) => {\r\n    \r\n    dispath({type:GET_ERRORS,payload:err.response.data})\r\n   \r\n    });\r\n\r\n//sync => wait\r\n//async = not wait\r\n}\r\n","export const GET_ERRORS = 'GET_ERRORS';\r\n\r\nexport const GET_WALLET = 'GET_WALLET';\r\n\r\nexport const DELETE_WALLET = 'DELETE_WALLET';\r\nexport const UPDATE_WALLET = 'UPDATE_WALLET';\r\nexport const UPDATE_TRANSACTION = 'UPDATE_TRANSACTION';\r\nexport const GETWALLET = 'GETWALLET';\r\nexport const GET_TRANSACTIONS = 'GET_TRANSACTIONS';\r\nexport const GET_TRANSACTION = 'GET_TRANSACTION';\r\nexport const DELETE_TRANSACTION = 'DELETE_TRANSACTION';","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {deleteWallet} from '../../actions/projectActions'\r\nimport {connect} from 'react-redux'\r\n class DashBoardItems extends Component {\r\n\r\n    deleteBtnClick= () =>\r\n    {\r\n\r\n        if(window.confirm(\"Are you sure, you want to delete this wallet\"))\r\n        {\r\n            this.props.deleteWallet(this.props.wallet.id);\r\n        }\r\n    \r\n    }\r\n    render() {\r\n\r\n        const wallet = this.props.wallet\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\" >\r\n                        <div className=\"col-lg-4 col-md-3 col-6\">\r\n                            <h3>{wallet.name}</h3>\r\n                            <p>Account Number: {wallet.accountNumber}</p>\r\n                            <p>{wallet.description}</p>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-md-3 col-6 text-center\">\r\n                            <h3>Balance</h3>\r\n                            <h1>Rs. {wallet.currentBalance}</h1>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-12 d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to={`/transactions/${wallet.id}`}>\r\n                                    <li className=\"list-group-item board text-success\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\"> View Transactions </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={`/updatewallet/${wallet.id}`}>\r\n                                    <li className=\"list-group-item update text-info\">\r\n                                        <i className=\"fa fa-edit pr-1\"> Update Account Info</i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link To=\"/Dashboard\" onClick={()=>this.deleteBtnClick()}>\r\n                                    <li className=\"list-group-item delete text-danger\">\r\n                                        <i className=\"fa fa-minus-circle pr-1\"> Delete Account</i>\r\n                                    </li>\r\n                                </Link>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(null,{deleteWallet})(DashBoardItems)\r\n","import React, { Component } from 'react'\r\nimport DashBoardItems from './DashBoardItems'\r\nimport {Link} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport {getWallets} from '../../actions/projectActions'\r\n\r\nexport class Dashboard extends Component {\r\n\r\n\r\n\r\n    constructor(props) {\r\n      super(props)\r\n    \r\n      this.state = {\r\n         currentBalance :0.0\r\n      }\r\n    }\r\n    \r\ncomponentWillReceiveProps(nextProps)\r\n{\r\nif(nextProps.wallets)\r\n{\r\n    let totalBal =0;\r\n\r\n    for (let i = 0; i < nextProps.wallets.length; i++) {\r\n        totalBal = totalBal + nextProps.wallets[i].currentBalance\r\n        \r\n    }\r\n  \r\n    this.setState({currentBalance:totalBal})\r\n}\r\n\r\n}\r\n    componentDidMount()\r\n    {\r\n        this.props.getWallets();\r\n    }\r\n\r\n    render() {\r\n\r\n        const wallets = this.props.wallets\r\n        const walletComponent = wallets.map(wallet=>(<DashBoardItems key={wallet.id} wallet={wallet}/>))\r\n     \r\n      \r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center h1\">My Wallets</h1>\r\n                            <br />\r\n                            <div className=\"btn-group\">\r\n                                <button type=\"button\" className=\"btn btn-info btn-lg dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Create new\r\n                        </button>\r\n                                <div className=\"dropdown-menu\">\r\n                                    <Link className=\"dropdown-item\" to=\"/createwallet\">Wallet</Link>\r\n                                    <button disabled className=\"dropdown-item\">Transaction</button>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"card text-center\">\r\n                                <div className=\"card-header bg-success text-white\">\r\n                                    <h4>Current Balance (Total)</h4>\r\n                                    <h1>Rs. {this.state.currentBalance}</h1>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            {\r\n                                //<!-- Project Item Component -->\r\n                            }\r\n                            \r\n                {\r\n                    walletComponent\r\n\r\n                   \r\n                }\r\n\r\n                \r\n        \r\n\r\n                            {\r\n                                //  <!-- End of Project Item Component --> \r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\t\r\n    wallets:state.wallet.wallets \r\n    \r\n});\r\nexport default connect(mapStateToProps,{getWallets})(Dashboard)\r\n","import React, { Component } from 'react'\r\nimport {createWallet} from '../../../actions/projectActions'\r\nimport {connect} from 'react-redux'\r\nimport classnames from 'classnames'\r\nclass CreateWallet extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            accountNumber: '',\r\n            description: '',\r\n            priority: '',\r\n            errors:''\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps)\r\n    {\r\n        if(nextProps.errors)\r\n        {\r\nthis.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n    changeHandler = (event, fieldName) => {\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        });\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        const newWallet = {\r\n\r\n            name: this.state.name,\r\n            accountNumber: this.state.accountNumber,\r\n            description: this.state.description,\r\n            priority: this.state.priority\r\n        }\r\n       this.props.createWallet(newWallet,this.props.history)\r\n        event.preventDefault();\r\n    } \r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center text-white\">Create Wallet</h5>\r\n                            <hr />\r\n                            <form onSubmit={(event)=>this.submitHandler(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={(event) => this.changeHandler(event, \"name\")} className={classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.name})} placeholder=\"Account Name\" />\r\n                                    <p className='text-danger'>{this.state.errors.name}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" onChange={(event) => this.changeHandler(event, \"accountNumber\")} className={classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.accountNumber})} placeholder=\"Account No\" />\r\n                                    <p className='text-danger'>{this.state.errors.accountNumber}</p>\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea onChange={(event) => this.changeHandler(event, \"description\")} className= {classnames(\"form-control form-control-lg\",{\"is-invalid\":this.state.errors.description})} placeholder=\"Description\"></textarea>\r\n                                    <p className='text-danger'>{this.state.errors.description}</p>\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" onChange={(event) => this.changeHandler(event, \"priority\")} name=\"priority\">\r\n                                        <option value={3}>Display Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"Create/Update\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    errors:state.errors\r\n    \r\n})\r\n\r\nexport default connect(mapStateToProps,{createWallet})(CreateWallet)\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"error-template\">\r\n                            <h1>\r\n                                Oops!</h1>\r\n                            <h2>\r\n                                404 Not Found</h2>\r\n                            <div className=\"error-details\">\r\n                                Sorry, an error has occured, Requested page not found!\r\n                        </div>\r\n                            <div className=\"error-actions\">\r\n                                <Link to=\"/\" className=\"btn btn-primary btn-lg\"><span className=\"glyphicon glyphicon-home\"></span>\r\n                                Take Me Home </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound\r\n","import { GET_ERRORS } from '../actions/types'\r\n\r\nconst initialState = {\r\n\r\n\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_WALLET, DELETE_WALLET,GET_TRANSACTION ,GETWALLET,GET_TRANSACTIONS,DELETE_TRANSACTION} from '../actions/types'\r\nimport { } from '../actions/types'\r\n\r\nconst initialState = {\r\n\r\n    wallets: [],\r\n    transactions: [],\r\n    wallet: '',\r\n    transaction: ''\r\n\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n       \r\n        \r\n        case GET_TRANSACTIONS:\r\n            return{...state, transactions: action.payload }\r\n            case GET_TRANSACTION:\r\n                return{...state, transaction: action.payload }\r\n        case GETWALLET:\r\n            return { ...state, wallet: action.payload };\r\n        case GET_WALLET:\r\n            return { ...state, wallets: action.payload };\r\n        case DELETE_WALLET:\r\n            return { ...state, wallets: state.wallets.filter(x => x.id !== action.payload) }\r\n\r\n          case  DELETE_TRANSACTION:\r\n            return { ...state, transactions: state.transactions.filter(x => x.id !== action.payload) }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport errorReducer from './errorReducer';\r\nimport walletReducer from './walletReducer';\r\n\r\nexport default combineReducers ({\r\n\r\n    errors:errorReducer,\r\n    wallet:walletReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\nconst initialState = {}\r\nconst middleWare = [thunk]\r\nlet store;\r\n\r\n//if (window.navigator.userAgent.includes(\"Chrome\")) {\r\n  //  store = createStore(rootReducer,\r\n       // initialState,\r\n        //compose(applyMiddleware(...middleWare),\r\n      //      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    //        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  //      ))\r\n//} else \r\n//{\r\n    store = createStore(rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleWare)))\r\n//}\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport classnames from 'classnames'\r\nimport { getWallet,updateWallet} from '../../../actions/projectActions'\r\n\r\nclass UpdateWallet extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            accountNumber: '',\r\n            description: '',\r\n            priority: '',\r\n            currentBalance:'',\r\n            errors: ''\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n\r\n        if (nextProps.wallet) {\r\n            this.setState({\r\n\r\n                id: nextProps.wallet.id,\r\n                name: nextProps.wallet.name,\r\n                accountNumber: nextProps.wallet.accountNumber,\r\n                description: nextProps.wallet.description,\r\n                currentBalance:nextProps.wallet.currentBalance,\r\n                priority: nextProps.wallet.priority,\r\n               \r\n\r\n            }\r\n\r\n            )\r\n        }\r\n    }\r\n    changeHandler = (event, fieldName) => {\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.getWallet(this.props.match.params.id)\r\n    }\r\n    submitHandler = (event) => {\r\n        const updateWallet = {\r\n            id: this.state.id,\r\n            name: this.state.name,\r\n            accountNumber: this.state.accountNumber,\r\n            description: this.state.description,\r\n            currentBalance:this.state.currentBalance,\r\n            priority: this.state.priority\r\n        }\r\nthis.props.updateWallet(this.state.id,updateWallet,this.props.history)\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Create Wallet</h5>\r\n                            <hr />\r\n                            <form onSubmit={(event) => this.submitHandler(event)}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" value={this.state.name} onChange={(event) => this.changeHandler(event, \"name\")} className={classnames(\"form-control form-control-lg\", { \"is-invalid\": this.state.errors.name })} placeholder=\"Account Name\" />\r\n                                    <p className='text-danger'>{this.state.errors.name}</p>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" value={this.state.accountNumber} onChange={(event) => this.changeHandler(event, \"accountNumber\")} className={classnames(\"form-control form-control-lg\", { \"is-invalid\": this.state.errors.accountNumber })} placeholder=\"Account No\" />\r\n                                    <p className='text-danger'>{this.state.errors.accountNumber}</p>\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea value={this.state.description} onChange={(event) => this.changeHandler(event, \"description\")} className={classnames(\"form-control form-control-lg\", { \"is-invalid\": this.state.errors.description })} placeholder=\"Description\"></textarea>\r\n                                    <p className='text-danger'>{this.state.errors.description}</p>\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select value={this.state.priority} className=\"form-control form-control-lg\" onChange={(event) => this.changeHandler(event, \"priority\")} name=\"priority\">\r\n                                        <option value={3}>Display Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" value=\"Update\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    errors: state.errors,\r\n    wallet: state.wallet.wallet\r\n})\r\n\r\nexport default connect(mapStateToProps, { getWallet,updateWallet })(UpdateWallet)\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { deleteTransaction } from './../../actions/projectActions'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n class TransactionItems extends Component {\r\n\r\n\r\n \r\n  \r\n  deleteBtnClick= () =>\r\n    {\r\n\r\n        if(window.confirm(\"Are you sure, you want to delete this wallet\"))\r\n        {\r\n            this.props.deleteTransaction(this.props.wallet_id,this.props.transaction.id);\r\n        }\r\n    \r\n    }\r\n  render() {\r\n\r\n  \r\n   let id = this.props.wallet_id;\r\n   let Tid =this.props.transaction.id;\r\n    const transaction = this.props.transaction\r\n    return (\r\n     \r\n        <tr className=\"table text-white\">\r\n        <td>{transaction.transactionDate}</td>\r\n        <td>{transaction.description}</td>\r\n        <td className=\"text-white\">{transaction.amount}</td>\r\n        <td>\r\n            <Link className=\"text-info\" to={`/trns/edit/${id}/${Tid}`}><i className=\"fas fa-edit fa-2x\"></i></Link>\r\n            <Link className=\"text-danger\" to={`/transactions/${id}`} onClick={()=>this.deleteBtnClick()}><i className=\"fas fa-trash fa-2x\"></i></Link>\r\n        </td>\r\n    </tr>\r\n    \r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null,{deleteTransaction})(TransactionItems)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { getTransactions, getWallet, updateWalletBal } from './../../actions/projectActions'\r\nimport { connect } from 'react-redux'\r\nimport TransactionItems from './TransactionItems';\r\nclass Transaction extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            accountNumber: '',\r\n            description: '',\r\n            priority: '',\r\n            currentBalance: '',\r\n            errors: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getTransactions(this.props.match.params.id);\r\n        this.props.getWallet(this.props.match.params.id)\r\n    }\r\n\r\n    componentWillUnmount(nextProps) {\r\n\r\n\r\n        const updateWallet = {\r\n            id: this.state.id,\r\n            name: this.state.name,\r\n            accountNumber: this.state.accountNumber,\r\n            description: this.state.description,\r\n            currentBalance: this.state.currentBalance,\r\n            priority: this.state.priority\r\n        }\r\n\r\n\r\n        this.props.updateWalletBal(this.state.id, updateWallet, this.props.history)\r\n\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        // alert(nextProps.wallet.id)\r\n\r\n        if (nextProps.transactions) {\r\n            let income = 0;\r\n            let expense = 0;\r\n            for (let i = 0; i < nextProps.transactions.length; i++) {\r\n\r\n                if (nextProps.transactions[i].type === 2) {\r\n                    expense = expense + nextProps.transactions[i].amount\r\n\r\n                } else {\r\n\r\n                    income = income + nextProps.transactions[i].amount\r\n                }\r\n\r\n\r\n            }\r\n\r\n            let Bal = 0;\r\n            Bal = income - expense;\r\n           \r\n            this.setState({ currentBalance: Bal })\r\n\r\n            if (nextProps.wallet) {\r\n\r\n\r\n                this.setState({\r\n                    id: nextProps.wallet.id,\r\n                    name: nextProps.wallet.name,\r\n                    accountNumber: nextProps.wallet.accountNumber,\r\n                    description: nextProps.wallet.description,\r\n\r\n                    priority: nextProps.wallet.priority,\r\n\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let id = this.props.match.params.id;\r\n\r\n        const transactions = this.props.transactions\r\n\r\n        const TransactionComponent = transactions.map(transaction =>\r\n            (<TransactionItems key={transaction.id} transaction={transaction} wallet_id={id} />))\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/dashboard\" className=\"btn btn-default btn-lg mb-3 text-white\">\r\n                    Back\r\n        </Link>\r\n                <Link to={`/trns/add/${id}`} className=\"btn btn-info btn-lg mb-3\">\r\n                    <i className=\"fas fa-plus-circle \"> Record new Transaction</i>\r\n                </Link>\r\n                <br />\r\n                <div className=\"card text-center\">\r\n                    <div className=\"card-header bg-success text-white\">\r\n                        <h4 className=\"text-white\">{this.state.name} Account Balance</h4>\r\n                        <h1 className=\"text-white\">Rs. {this.state.currentBalance}</h1>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">Date</th>\r\n                            <th scope=\"col\">Description</th>\r\n                            <th scope=\"col\">Amount</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n\r\n                    <tbody>\r\n\r\n\r\n                        {TransactionComponent}\r\n\r\n\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n\r\n    wallet: state.wallet.wallet,\r\n    transactions: state.wallet.transactions\r\n\r\n\r\n});\r\nexport default connect(mapStateToProps, { getTransactions, getWallet, updateWalletBal })(Transaction)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { createTransaction, getWallet } from '../../../actions/projectActions'\r\nimport { connect } from 'react-redux'\r\nclass AddTransaction extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            currentBalance: '',\r\n            amount: '',\r\n            description: '',\r\n            type: '1',\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        // alert(nextProps.wallet.id)\r\n\r\n        if (nextProps.wallet) {\r\n            this.setState({\r\n\r\n                currentBalance: nextProps.wallet.currentBalance\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getWallet(this.props.match.params.id)\r\n    }\r\n    changeHandler = (event, fieldName, checkbox) => {\r\n        this.setState({\r\n            [fieldName]: checkbox ? event.target.checked : event.target.value\r\n        })\r\n    }\r\n    handleSubmit = (event) => {\r\n\r\n        \r\n        if (this.state.type === \"2\") {\r\n            \r\n            if (this.state.currentBalance < this.state.amount) {\r\n                alert(\"Wallet Current balance is insufficient to fullfill the transaction\")\r\n            }else {\r\n\r\n                \r\n                let newTransaction = {\r\n                    amount: this.state.amount,\r\n                    description: this.state.description,\r\n                    type: this.state.type\r\n                }\r\n    \r\n                this.props.createTransaction(newTransaction, this.props.history, this.props.match.params.id)\r\n    \r\n    \r\n                event.preventDefault();\r\n    \r\n                \r\n            }\r\n\r\n\r\n        } else {\r\n            let newTransaction = {\r\n                amount: this.state.amount,\r\n                description: this.state.description,\r\n                type: this.state.type\r\n            }\r\n\r\n            this.props.createTransaction(newTransaction, this.props.history, this.props.match.params.id)\r\n\r\n\r\n            event.preventDefault();\r\n\r\n            \r\n        }\r\n     \r\n    }\r\n        render() {\r\n            let id = this.props.match.params.id;\r\n            const { amount, description } = this.state;\r\n            return (\r\n\r\n                <div className=\"add-PBI\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <Link to={`/transactions/${id}`} className=\"btn btn-light\">\r\n                                    Back to Wallet\r\n                    </Link>\r\n                                <h4 className=\"display-4 text-center h1\">Record New Transaction</h4>\r\n                                <p className=\"lead text-center h1\">UBL Account</p>\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"number\"  value={amount} onChange={event => this.changeHandler(event, \"amount\", false)} className=\"form-control form-control-lg\" placeholder=\"Amount\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea className=\"form-control form-control-lg\" value={description} onChange={event => this.changeHandler(event, \"description\", false)} placeholder=\"Description\"></textarea>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlTextarea1\">Transaction Type : </label>\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input checked className=\"form-check-input\" type=\"radio\" id=\"income\" onChange={event => this.changeHandler(event, \"type\", false)} name=\"type\" value=\"1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"income\">Income</label>\r\n                                        </div>\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" id=\"expense\" onChange={event => this.changeHandler(event, \"type\", false)} name=\"type\" value=\"2\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"expense\">Expense</label>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    const mapStateToProps = (state) => ({\r\n\r\n        wallet: state.wallet.wallet,\r\n\r\n\r\n\r\n    });\r\n    export default connect(mapStateToProps, { createTransaction, getWallet }) (AddTransaction)\r\n","import React, { Component } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { updateTransaction,getTransaction ,getWallet} from '../../../actions/projectActions'\r\nimport { connect } from 'react-redux'\r\nclass EditTransactions extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id:'',\r\n            amount: '',\r\n            description: '',\r\n            type: '1',\r\n            transactionDate:'',\r\n            name:''\r\n\r\n        }\r\n    }\r\n\r\n \r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.transaction) {\r\n            \r\n            this.setState({\r\n\r\n                id: nextProps.transaction.id,\r\n                amount: nextProps.transaction.amount,\r\n                description: nextProps.transaction.description,\r\n                type: nextProps.transaction.type,\r\n                transactionDate:nextProps.transaction.transactionDate\r\n\r\n            })\r\n        }\r\n            if(nextProps.wallet)\r\n            {\r\n                this.setState({\r\n\r\n                    name:nextProps.wallet.name\r\n                })\r\n            }\r\n\r\n            \r\n        \r\n    }\r\n\r\n    changeHandler = (event, fieldName) => {\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n    }\r\n    handleSubmit = (event) => {\r\n\r\n        let updateTransaction = {\r\n            id:this.state.id,\r\n            amount: this.state.amount,\r\n            description: this.state.description,\r\n            transactionDate:this.state.transactionDate,\r\n            type: this.state.type\r\n        }\r\n\r\n        this.props.updateTransaction(this.state.id,this.props.match.params.id,updateTransaction, this.props.history)\r\n        event.preventDefault();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getTransaction(this.props.match.params.id, this.props.match.params.Tid)\r\n        this.props.getWallet(this.props.match.params.id)\r\n    }\r\n    render() {\r\n        let id = this.props.match.params.id;\r\n        const { amount, description,type } = this.state;\r\n      \r\n        return (\r\n\r\n\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/transactions/${id}`} className=\"btn btn-light\">\r\n                                Back to Wallet\r\n            </Link>\r\n                            <h4 className=\"display-4 text-center text-white\">Update Transaction</h4>\r\n                            <p className=\"lead text-center text-white\">{this.state.name} Account</p>\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"number\" min=\"1\" value={amount} onChange={event => this.changeHandler(event, \"amount\")} className=\"form-control form-control-lg\" placeholder=\"Amount\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\" value={description} onChange={event => this.changeHandler(event, \"description\")} placeholder=\"Description\"></textarea>\r\n                                </div>\r\n                                <div className=\"form-group radio\">\r\n                                    <label htmlFor=\"exampleFormControlTextarea1 \">Transaction Type : </label>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input  className=\"form-check-input\" type=\"radio\" id=\"income\" checked={type === 1} onChange={event => this.changeHandler(event, \"type\")} name=\"type\" value=\"1\"  />\r\n                                        <label className=\"form-check-label\" htmlFor=\"income\">Income</label>\r\n                                    </div>\r\n                                    <div className=\"form-check form-check-inline\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" id=\"expense\" checked={type === 2} onChange={event => this.changeHandler(event, \"type\")} name=\"type\" value=\"2\"  />\r\n                                        <label className=\"form-check-label\" htmlFor=\"expense\">Expense</label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    errors: state.errors,\r\n    transaction: state.wallet.transaction,\r\n    wallet: state.wallet.wallet\r\n\r\n});\r\nexport default connect(mapStateToProps, {updateTransaction, getTransaction ,getWallet})(EditTransactions)\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css';\r\nimport Nav from './components/shared/Nav';\r\nimport Welcome from './components/Welcome';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport CreateWallet from './components/dashboard/dashboardOperations/CreateWallet';\r\nimport NotFound from './components/shared/NotFound';\r\nimport {Provider} from 'react-redux'\r\nimport store from './Store'\r\nimport UpdateWallet from './components/dashboard/dashboardOperations/UpdateWallet';\r\nimport Transaction from './components/transactions/Transaction';\r\nimport AddTransaction from './components/transactions/transactionOperations/AddTransaction';\r\nimport EditTransactions from './components/transactions/transactionOperations/EditTransactions';\r\nimport 'react-app-polyfill/stable'\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <BrowserRouter >\r\n      <Route path=\"/\" component={Nav} />\r\n\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Welcome} />\r\n        <Route path=\"/dashboard\" exact component={Dashboard} />\r\n        <Route path=\"/createwallet\" exact component= {CreateWallet} />\r\n        <Route path=\"/updatewallet/:id\" exact component= {UpdateWallet} />\r\n        <Route path=\"/transactions/:id\" exact component={Transaction} />\r\n        <Route path=\"/trns/add/:id\" exact component={AddTransaction}/>\r\n        <Route path=\"/trns/edit/:id/:Tid\" exact component={EditTransactions}/>\r\n        <Route path=\"/\" component={NotFound} />\r\n        </Switch>\r\n      \r\n\r\n    </BrowserRouter>\r\n    </Provider>\r\n \r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}